{"ast":null,"code":"var _jsxFileName = \"/Users/nickjohnson/sei-june-bugs/Project3/P2P-SportsBook/p2p-wagers/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport AuthGateway from './AuthGateway/AuthGateway';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport MainContainer from './MainContainer';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleRegister = async formData => {\n      console.log(formData);\n      const response = await fetch(\"http://localhost:9000/users\", {\n        method: \"POST\",\n        body: JSON.stringify(formData),\n        credentials: 'include',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const parsedResponse = await response.json();\n      console.log(parsedResponse);\n    };\n\n    this.handleLogin = async formData => {\n      console.log(formData);\n\n      try {\n        const loginResponse = await fetch(\"http://localhost:9000/users/login\", {\n          method: \"POST\",\n          body: JSON.stringify(formData),\n          credentials: 'include',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const parsedLoginResponse = await loginResponse.json();\n        console.log(parsedLoginResponse, 'parsed login response');\n\n        if (parsedLoginResponse.status === 200) {\n          this.setState({\n            logged: true,\n            currentUser: parsedLoginResponse.data\n          });\n        } else {\n          console.log(\"Jake says you screwed up dummy!\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      logged: false\n    };\n  } // login = (username) => {\n  //   this.setState({\n  //     logged: true,\n  //     username: username\n  //   })\n  // }\n\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.logged ? React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: MainContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users\",\n      component: MainContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })) : React.createElement(AuthGateway, {\n      handleLogin: this.handleLogin,\n      handleRegister: this.handleRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nickjohnson/sei-june-bugs/Project3/P2P-SportsBook/p2p-wagers/src/App.js"],"names":["React","Component","AuthGateway","Switch","Route","Link","MainContainer","App","constructor","handleRegister","formData","console","log","response","fetch","method","body","JSON","stringify","credentials","headers","parsedResponse","json","handleLogin","loginResponse","parsedLoginResponse","status","setState","logged","currentUser","data","err","state","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport AuthGateway from './AuthGateway/AuthGateway';\nimport {Switch, Route, Link } from 'react-router-dom';\nimport MainContainer from './MainContainer';\n\n\n\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      logged: false,\n    }\n  }\n  // login = (username) => {\n  //   this.setState({\n  //     logged: true,\n  //     username: username\n  //   })\n  // }\n  handleRegister = async (formData) => {\n    console.log(formData);\n    const response = await fetch(\"http://localhost:9000/users\", {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      credentials: 'include',\n      headers: {\n          \"Content-Type\": \"application/json\"\n      }\n    })\n    const parsedResponse = await response.json();\n    console.log(parsedResponse);\n\n  };\n  handleLogin = async (formData) => {\n    console.log(formData)\n    try {\n      const loginResponse = await fetch(\"http://localhost:9000/users/login\", {\n        method: \"POST\",\n        body: JSON.stringify(formData),\n        credentials: 'include',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n      const parsedLoginResponse = await loginResponse.json();\n      console.log(parsedLoginResponse, 'parsed login response' );\n      if(parsedLoginResponse.status === 200){\n        this.setState({\n          logged: true,\n          currentUser: parsedLoginResponse.data\n        })\n      } else {\n        console.log(\"Jake says you screwed up dummy!\")\n      }\n\n    } catch(err){\n      console.log(err)\n    }\n  }\n  render() {\n    console.log(this.state)\n    return (\n      <div className=\"App\">\n        {this.state.logged ? \n        <Switch>\n          <Route exact path=\"/\" component={MainContainer} />\n          <Route path=\"/users\" component={MainContainer} />\n\n        </Switch>\n      :\n        <AuthGateway handleLogin={this.handleLogin} handleRegister = {this.handleRegister}></AuthGateway>}\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}