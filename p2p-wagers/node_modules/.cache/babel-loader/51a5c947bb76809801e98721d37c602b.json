{"ast":null,"code":"var _jsxFileName = \"/Users/nickjohnson/sei-june-bugs/Project3/P2P-SportsBook/p2p-wagers/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport AuthGateway from './AuthGateway/AuthGateway';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport MainContainer from './MainContainer';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleRegister = async formData => {\n      console.log(formData);\n      const response = await fetch(\"http://localhost:9000/users\", {\n        method: \"POST\",\n        body: JSON.stringify(formData),\n        credentials: 'include',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const parsedResponse = await response.json();\n      console.log(parsedResponse);\n\n      if (parsedResponse.status === 200) {\n        this.setState({\n          loggedIn: true,\n          currentUser: parsedResponse.data\n        });\n      }\n    };\n\n    this.handleLogin = async formData => {\n      console.log(formData);\n\n      try {\n        const loginResponse = await fetch(\"http://localhost:9000/users/login\", {\n          method: \"POST\",\n          body: JSON.stringify(formData),\n          credentials: 'include',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const parsedLoginResponse = await loginResponse.json();\n        console.log(parsedLoginResponse);\n\n        if (parsedLoginResponse.status === 200) {\n          this.setState({\n            loggedIn: true,\n            currentUser: parsedLoginResponse.data\n          });\n        } else {\n          console.log(\"Jake says you screwed up dummy!\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      loggedIn: false,\n      currentUser: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.loggedIn ? React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: MainContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })) : React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: MainContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nickjohnson/sei-june-bugs/Project3/P2P-SportsBook/p2p-wagers/src/App.js"],"names":["React","Component","AuthGateway","Switch","Route","Link","MainContainer","App","constructor","handleRegister","formData","console","log","response","fetch","method","body","JSON","stringify","credentials","headers","parsedResponse","json","status","setState","loggedIn","currentUser","data","handleLogin","loginResponse","parsedLoginResponse","err","state","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport AuthGateway from './AuthGateway/AuthGateway';\nimport {Switch, Route, Link } from 'react-router-dom';\nimport MainContainer from './MainContainer';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      loggedIn: false,\n      currentUser: null\n    }\n  }\n  handleRegister = async (formData) => {\n    console.log(formData);\n    const response = await fetch(\"http://localhost:9000/users\", {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      credentials: 'include',\n      headers: {\n          \"Content-Type\": \"application/json\"\n      }\n  })\n  const parsedResponse = await response.json();\n  console.log(parsedResponse);\n  if(parsedResponse.status === 200){\n      this.setState({\n          loggedIn: true,\n          currentUser: parsedResponse.data\n      })\n  }\n  }\n  handleLogin = async (formData) => {\n    console.log(formData)\n    try {\n      const loginResponse = await fetch(\"http://localhost:9000/users/login\", {\n        method: \"POST\",\n        body: JSON.stringify(formData),\n        credentials: 'include',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n      const parsedLoginResponse = await loginResponse.json();\n      console.log(parsedLoginResponse);\n      if(parsedLoginResponse.status === 200){\n        this.setState({\n          loggedIn: true,\n          currentUser: parsedLoginResponse.data\n        })\n      } else {\n        console.log(\"Jake says you screwed up dummy!\")\n      }\n\n    } catch(err){\n      console.log(err)\n    }\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        {this.state.loggedIn ? \n        <Switch>\n          <Route exact path=\"/\" component={MainContainer} />\n        </Switch>\n      :\n          <Route exact path=\"/\" component={MainContainer} />\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}