{"ast":null,"code":"var _jsxFileName = \"/Users/nickjohnson/sei-june-bugs/Project3/P2P-SportsBook/p2p-wagers/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport AuthGateway from './AuthGateway/AuthGateway';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport MainContainer from './MainContainer';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.checkForUser = async () => {\n      const currentUser = await fetch(\"http://localhost:9000/users/current\", {\n        credentials: 'include'\n      });\n      const parsedResponse = await currentUser.json();\n\n      if (parsedResponse.status === 200) {\n        this.setState({\n          loggedIn: true,\n          currentUser: parsedResponse.data\n        });\n      }\n    };\n\n    this.handleRegister = async formData => {\n      console.log(formData);\n      const response = await fetch(\"http://localhost:9000/users\", {\n        method: \"POST\",\n        body: JSON.stringify(formData),\n        credentials: 'include',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const parsedResponse = await response.json();\n      console.log(parsedResponse);\n\n      if (parsedResponse.status === 200) {\n        this.setState({\n          loggedIn: true,\n          currentUser: parsedResponse.data\n        });\n      }\n    };\n\n    this.handleLogin = async formData => {\n      console.log(formData);\n\n      try {\n        const loginResponse = await fetch(\"http://localhost:9000/users/login\", {\n          method: \"POST\",\n          body: JSON.stringify(formData),\n          credentials: 'include',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const parsedLoginResponse = await loginResponse.json();\n        console.log(parsedLoginResponse);\n\n        if (parsedLoginResponse.status === 200) {\n          this.setState({\n            loggedIn: true,\n            currentUser: parsedLoginResponse.data\n          });\n        } else {\n          console.log(\"Jake says you screwed up dummy!\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      loggedIn: false,\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    this.checkForUser();\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.logged ? React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: MainContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users\",\n      component: MainContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })) : React.createElement(AuthGateway, {\n      handleLogin: this.handleLogin,\n      handleRegister: this.handleRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nickjohnson/sei-june-bugs/Project3/P2P-SportsBook/p2p-wagers/src/App.js"],"names":["React","Component","AuthGateway","Switch","Route","Link","MainContainer","App","constructor","checkForUser","currentUser","fetch","credentials","parsedResponse","json","status","setState","loggedIn","data","handleRegister","formData","console","log","response","method","body","JSON","stringify","headers","handleLogin","loginResponse","parsedLoginResponse","err","state","componentDidMount","render","logged"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport AuthGateway from './AuthGateway/AuthGateway';\nimport {Switch, Route, Link } from 'react-router-dom';\nimport MainContainer from './MainContainer';\n\n\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      loggedIn: false,\n      currentUser: null\n    }\n  }\n  componentDidMount(){\n    this.checkForUser()\n  }\n  checkForUser = async () => {\n    const currentUser = await fetch(\"http://localhost:9000/users/current\", {\n      credentials: 'include'\n    })\n    const parsedResponse = await currentUser.json();\n    if(parsedResponse.status === 200){\n      this.setState({\n        loggedIn: true,\n        currentUser: parsedResponse.data\n      })\n    }\n  }\n  handleRegister = async (formData) => {\n    console.log(formData);\n    const response = await fetch(\"http://localhost:9000/users\", {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      credentials: 'include',\n      headers: {\n          \"Content-Type\": \"application/json\"\n      }\n  })\n  const parsedResponse = await response.json();\n  console.log(parsedResponse);\n  if(parsedResponse.status === 200){\n      this.setState({\n          loggedIn: true,\n          currentUser: parsedResponse.data\n      })\n  }\n  }\n  handleLogin = async (formData) => {\n    console.log(formData)\n    try {\n      const loginResponse = await fetch(\"http://localhost:9000/users/login\", {\n        method: \"POST\",\n        body: JSON.stringify(formData),\n        credentials: 'include',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n      const parsedLoginResponse = await loginResponse.json();\n      console.log(parsedLoginResponse);\n      if(parsedLoginResponse.status === 200){\n        this.setState({\n          loggedIn: true,\n          currentUser: parsedLoginResponse.data\n        })\n      } else {\n        console.log(\"Jake says you screwed up dummy!\")\n      }\n\n    } catch(err){\n      console.log(err)\n    }\n  }\n  render() {\n    console.log(this.state)\n    return (\n      <div className=\"App\">\n        {this.state.logged ? \n        <Switch>\n          <Route exact path=\"/\" component={MainContainer} />\n          <Route path=\"/users\" component={MainContainer} />\n\n        </Switch>\n      :\n        <AuthGateway handleLogin={this.handleLogin} handleRegister = {this.handleRegister}></AuthGateway>}\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}